- filter ||= '2-level'
- @index = true

- case filter
- when '1-level'
  - filter_callback = Proc.new { |name| /^(\.\w+)$/.match(name) }
  - @title = 'Free Top Level Zones'
- when '2-level'
  - @title = 'Free Second Level Zones'
  - filter_callback = Proc.new { |name| /^(\.\w+){1,2}$/.match(name) }
- when 'any-level'
  - @title = 'All Free Zones'
  - filter_callback = Proc.new { true }
- else
  - raise 'Unknown filter'

.ui.container
  %p
    Here you can find a list of known currently functioning free domain zones.
    Feel free to leave your feedback, submit new zones, and fix inaccurate information
    <a href="https://gitlab.com/sandfox/freedomainzones.netlify.app">on our GitLab page</a>.

.ui.container
  %p
    - if filter == 'any-level'
      All
    - else
      = link_to 'All', '/any-level.html'

    &bull;

    - if filter == '1-level'
      Only top level domains
    - else
      = link_to 'Only top level domains', '/1-level.html'

    &bull;

    - if filter == '2-level'
      Up to 2 level domains
    - else
      = link_to 'Up to 2 level domains', '/index.html'

  %table.ui.celled.table.unstackable
    %thead
      %tr
        %th Zone
        %th NS Records
        %th URL forwarding
        %th External DNS
        %th Service
    %tbody
      - data.zones.keys.select(&filter_callback).sort.each do |name|
        - zone = data.zones[name]
        - service = data.services[zone.service]
        %tr
          / Zone
          %td= name
          / NS Records
          - if service.record_types
            %td= service.record_types.join(', ')
          - else
            %td
              %i none (only external servers)
          / URL forwarding
          - if service.forwarding
            %td.yes ✓
          - else
            %td.no ✗
          / External DNS
          - if service.custom_ns
            %td.yes ✓
          - else
            %td.no ✗
          / Service
          %td= link_to service.name, "/services/#{zone.service}.html"
