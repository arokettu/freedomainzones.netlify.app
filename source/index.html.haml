- filter ||= '2-level'
- @index = true

- case filter
- when '1-level'
  - filter_callback = Proc.new { |name| /^(\.\w+)$/.match(name) }
  - @title = 'Free Top Level Zones'
- when '2-level'
  - @title = 'Free Second Level Zones'
  - filter_callback = Proc.new { |name| /^(\.\w+){1,2}$/.match(name) }
- when 'any-level'
  - @title = 'All Free Zones'
  - filter_callback = Proc.new { true }
- else
  - raise 'Unknown filter'

.ui.container
  = partial :index_top

.ui.container
  = partial :index_menu, locals: { filter: filter }

  .table-wrapper
    %table.ui.celled.table.unstackable
      %thead
        %tr
          %th Zone
          %th NS Records
          %th URL forwarding
          %th External DNS
          %th Service
      %tbody
        - any = false
        - data.zones.keys.select(&filter_callback).sort.each do |name|
          - zone = data.zones[name]
          - service = data.services[zone.service]
          - unless service.archive
            - any = true
            %tr
              -# Zone
              %td= name

              = partial :index_row_params, locals: { service: service }

              -# Service
              %td= link_to service.name, "/services/#{zone.service}.html"
        - unless any
          %tr
            %td{colspan: 5} No zones for this filter
